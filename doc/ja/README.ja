comment -*- mode: text -*-
comment $Id$

* mltermとは
  Multi Lingual TERMinal の略です。

* コンパイル方法
  $ ./configure
  $ make

  o 必要なもの
    基本的な機能は、libc / Xlibがあれば動きます。
    多言語処理機能の多くは、自前でもってますので、OS のサポートがなくても、ほと
    んどの機能は使えます。
    (たとえば、libc に ja_JP.UTF-8 ローケールがなくても、ja_JP.eucJP ローケール
    があれば、UTF-8 エンコーディングの端末に日本語入力できる、など)

    gtk+ で作られた設定変更ツールを使用する場合は、gtk+ (1.2.x ?)が必要となります。
    (mlterm 本体にはリンクしません)

    アンチエイリアスフォントを利用する場合は、
    XFree86 4.0.2 以上
    freetype 2.0.2 以上
    が必要です。

    壁紙を貼るには、imlib (1.9.x ?)が必要です。

    Unicode の Bidi レンダリングには、Fribidi 0.9.x 以上(?) が必要です。

    ISCII の表示には、libind が必要です。

    これらは、すべて、configure 時に有無をチェックします。
     
  o configure オプション
    --prefix
      インストールプレフィクス

    --enable-imlib
      imlibを使って、壁紙を貼れるようにします。

    --enable-anti-alias
      TrueTypeフォントをantialisします。

    --enable-fribidi
      Fribidi を用いて Bidi レンダリングを行ないます。

    --enable-ind
      libind を用いて ISCII を表示します。

    --enable-debug
      デバッグバージョンをビルドします。

    --enable-ucs4
      UCS4を使うようにします。(非推奨)
      デフォルトでは、UCS2。
      現在のところ、メモリ消費量が増えるだけで、あんまし(全然)、意味ないです。

    --disable-shared
      共有ライブラリを構築しません。

    --disable-static
      静的ライブラリを構築しません。

    --with-libtool=[path]
      libtool を自動生成せず、システムのlibtoolを使うよう指定します。


* 主な機能
  o アンチエイリアス
    フォントのアンチエイリアス表示をサポートしています。
    これには、X の Xrender extension に対応した Xft を利用しています。

    アンチエイリアスフォントと、通常の X フォントのどちらを使うかは動的に切替え可
    能です。

    KDE(Qt) と同じ設定でアンチエイリアスを使用できるようになりますので、Xft の設定
    の詳細については、KDE ユーザ会の web ページなどを参照して下さい。

  o 壁紙、背景透過
    imlib がインストールされている環境で、imlib を組み込んでビルドした mlterm には、
    壁紙をはり付けることができます。
    背景透過も可能です。imlib がリンクされていれば、透過した背景の輝度を調節するこ
    ともできます。

  o マルチPTY
    単一プロセス中から、最大 32 個まで、ptyウィンドウを起動できます。
    最大数は、-K オプションで指定できます。
    -P オプションを指定すると、そこで指定した数だけの pty ウィンドウが同時に起動
    します。
    また、起動後は、Ctrl+F1(デフォルト)で、新しいptyウィンドウが起動します。

  o マルチXIM
    複数のXIMを動的に切替えて使用することができます。
    たとえば、端末側がUTF8エンコーディングで、kinput2とAmiを切替えながら、日本語
    ハングル混在の文章を入力できます。

  o プロポーショナルフォント
    プロポーショナルフォントも使用できます。
    この場合、-V オプションで、コラム幅を可変にするか、固定にするかを指定すること
    ができます。
    プロポーショナルフォントをコラム幅固定で使用する場合、一文字ずつ描画して無理
    矢理隙間を埋めますので、描画パフォーマンスが低下します。

  o mlterm configuration protocol
    設定変更のための専用シーケンスを定義しています(see doc/en/PROTOCOL)
    それを使うことによっても、設定の動的変更が可能です。

* 設定
  o 設定ファイル
    ${SYSCONFDIR}/mlterm 以下、および、~/.mlterm 以下におかれます。
    前者が先に読まれ、次にそれを後者で上書きできます。
  
    main     ... 引数オプションで上書き可能な、プリミティブな設定
    font     ... フォント設定
    vfont    ... 可変長コラム幅使用時のフォント設定
    aafont   ... Xft用フォント設定
    vaafont  ... Xft用かつ可変長コラム幅使用時のフォント設定
    tfont    ... 縦用フォント指定
    taafont  ... Xft用かつ縦用フォント指定
    color    ... 色定義
    key      ... ショートカットキー定義
    termcap  ... termcapもどき
    xim      ... XIM ローケール指定

    o main
      KEY=VALUE

      行頭の # で、その行をコメントアウトできます。
      
      **で囲まれている方のがデフォルト値です。
      (#) のついているオプションは、設定画面からの動的変更が可能です。

      -- Window 関連 --
      o display
        X の DISPLAY を指定
        
      o geometry
        表示位置を指定

      o app_name  (*mlterm*)
        アプリケーション名
        
      o title  (*mlterm*)
        タイトル名
        
      o icon_name  (*mlterm*)
        アイコン名
      
      o screen_width_ratio  (*100*) (#)
        実スクリーンの横幅(百分率)
        
      o screen_height_ratio  (*100*) (#)
        実スクリーンの縦幅(百分率)

      -- Terminal 関連 --
      o use_loing_shell  (true/*false*)
        ログインシェルを使うかどうか
        
      o termtype  (*xterm*/kterm)
        端末タイプ
        kterm の方が無難
        
      o max_ptys  (*5)
        pty ウィンドウの最大数
        
        指定できる値は、1 から 32 までです。
        
      o ptys  (*1*)
        起動時に立ち上げるptyウィンドウの数

      -- Encoding 関連 --
      o ENCODING  (*auto*) (#)
        エンコーディングの指定
        
        サポートしているエンコーディングは、以下の通りです。
        ISO-8859-[1-11], ISO-8859-[13-16], TIS-620 (same as ISO-8859-11), KOI8-R,
        KOI8-U, TCVN5712, VISCII, EUC-JP, EUC-JISX0213, Shift_JIS, Shift_JISX0213, 
        ISO-2022-JP[1-3], EUC-KR, UHC, JOHAB, ISO-2022-KR, GB2312 (EUC-CN), GBK,
        GB18030, ISO-2022-CN, HZ, EUC-TW, BIG5, BIG5HKSCS, UTF-8, AUTO
        '-' , '_' および、大文字小文字は無視されます。

        (注)
        o pty から流れてくる文字列のエンコーディングを自動認識することはできません。
        o TIS620、TCVN5712,JISX0213 の合成用ダイアクリティカルマーク、および
          UNICODE の結合クラス結合文字については、結合文字を動的合成できますので、
          それらを使う場合は、-m オプションをつけて、結合文字サポートを有効にし
          てください。
        o AUTO を指定した場合、nl_langinfo -> LC_ALL -> LC_TYPE -> LANGを順番に調
          べ、適当なエンコーディングを選択します。
          ENCODING 指定を行なわなかった場合も同様です。

      o use_bidi  (*true*/false) (#)
        BiDi レンダリングを行う
        
      o use_combining  (*true*/false) (#)
        結合文字を動的合成する

      o iscii_lang  (assamese/bengali/gujarati/hindi/kannada/*malayalam*/oriya/punjabi/roman/tamil/telugu) (#)
        ISCII にて、使用する言語を指定する
        
      o big5_buggy  (true/*false*)
        Big5 CTEXT のバグ (XFree86 4.1.0 以前) に対応する
        
      o col_size_of_width_a  (*1*/2)
        UNICODE の EastAsianWidth.txt の A プロパティのコラム数
        
      o vertical_mode  (*none*/cjk/mongol) (#)
        縦表示のスタイルを指定
        
        cjk は、右から左の縦表示、mongol は、左から右の縦表示です。

      o use_multi_column_char  (*false*)  (#)
        1 文字で複数コラムを占有する文字の処理を行なう

        いわゆる全角文字を処理するかどうかを指定します。
        w3m-m17n を縦表示で使用する場合には、このオプションを有効にしてください。
         
      o copy_paste_via_ucs  (true/*false*) (#)
        copy and paste で受け取った XCOMPOUND TEXT を一度 UNICODE を経由してから、
        端末エンコーディングに変換する

      -- Font 関連 --
      o fontsize  (*16*) (#)
        デフォルトフォントサイズ
        
      o font_size_range  (*6-30*)
        変更可能なフォントサイズの範囲
        
        フォーマットは以下のとおり。
        [min]-[max]
        
        e.g.)
        font_size_range = 10-24
        10 から 24 ポイントまで変更できるようになります
              
      o step_in_changing_font_size (*1*)
        larger,smaller ボタンでのフォントサイズの変化量(*1*)

      o use_variable_column_width  (*false*) (#)
        可変長コラム幅を使用する
        
      o use_anti_alias  (true/*false*) (#)
        アンチエイリアスフォントを使用する
        
      o use_cp932_ucs_for_xft  (*true*/false)
        アンチエイリアス(Xft)時、JISX0208 の Unicode 変換に CP932 の変換テーブル
        を使う
        
        多くの Unicode フォント(東風、Dynalab フォント)は、CP932 の変換テーブルを
        元に、JISX0208 用のフォントを格納しています。
        「〜」などが表示されないという場合は、このオプションを有効にしてください。
      
      o not_use_unicode_font  (true/*false*)
        UNICODE を適当な文字集合にmapして、UNICODE フォントを使わずに表示する
        
      o only_use_unicode_font (true/*false*)
        すべての文字を UNICODE フォントだけを使って表示する
        
      o iso88591_font_for_usascii (true/*false*)
        US_ASCII の表示には、必ず ISO8859-1 フォントを使用する

      -- Appearance 関連 --
      o use_transbg (true/*false*) (#)
        背景透過する
      
      o use_scrollbar (*true*/false)
        スクロールバーをつける
        
        scrollbar_mode , scrollbar_view_name オプションは、これが true の場合の
        み有効です。
        2.2.0 以前との互換オプションです。
        
      o scrollbar_mode (none/*left*/right) (#)
        スクロールバーのつけ方
        
      o scrollbar_view_name  (*simple*/sample/sample2)
        使いたいスクロールバーの名前

      o fg_color  (*black*) (#)
        端末画面の前景色
        
        fg_color,bg_colorに指定できる値
        
        white/black/red/green/yellow/blue/magenta/cyan/gray/lightgray/pink/brown/priv_fg/priv_bg

        priv_{fg|bg} は、ユーザ定義前景、背景色です。
        color ファイルで、priv_fg/priv_bg(デフォルト値は白)を定義してください。

      o bg_color  (*white*) (#)
        同背景色
        
      o sb_fg_color  (*same as fg_color*)
        スクロールバーの前景色
        
      o sb_bg_color  (*same as bg_color*)
        同背景色
        
      o wall_picture  (*なし*) (#)
        壁紙にする画像ファイルのパス

      o fade_ratio  (*100*) (#)
        Focus から外れたときの前景/背景色の Fade 率(百分率)
        
      o brightness  (*100*) (#)
        背景画像(透過処理含む)の輝度調整(百分率)

      o line_space  (*0*) (#)
        行間の広さ

      -- その他 --
      o use_xim  (*true*/false)
        XIM を使う
        
        これを false にすると、XIM は一切使用できなくなります
        
      o xim_open_in_startup  (*true*/false)
        起動時に XIM を open する
        
      o tabsize  (*8*) (#)
        タブ幅
        
      o logsize  (*128*) (#)
        ログの行数

      o word_separators  (*" ,.:;/@"*)
        単語の区切り文字を指定

        double クリックで、単語選択する際に使用されます。

      o mod_meta_mode  (*none*/esc/8bit)
        Metaキーを押下した時の挙動

        esc の場合、"0x1b" を、8bit の場合は、入力文字の8ビット目をたてます。
        
      o bel_mode  (none/*sound*/visual) (#)
        BEL(0x7)を受け取った時の挙動

        soundの場合はビープ音で、visualの場合は画面ブランクでBELを通知します。
        
      o conf_menu_path  (*/usr/local/libexec/mlconfig*) (#)
        mlconfig(GUI設定コマンド)のパス

    o font/vfont/aafont/vaafont/tfont/taafont
      o DEC_SPECIAL        ... 罫線文字用のフォント
      o ISO8859_N          ... ISO8859_Nフォント
      o TIS620             ... TIS 620 フォント
      o VISCII             ... VISCII フォント
      o KOI8_R             ... KOI8_R フォント
      o KOI8_U             ... KOI8_U フォント
      o TCVN5712           ... TCVN5712 フォント
      o JISX0201_ROMAN     ... JISX0201左面フォント
      o JISX0201_KATA      ... JISX0201右面フォント
      o JISX0208_1978      ... JISX0208フォント(JISC6226_1978も可)
      o JISX0208_1983      ... JISX0208フォント
      o JISX0208_1990      ... JISX0208フォント
      o JISX0212_1990      ... JISX0212(補助漢字)フォント
      o JISX0213_2000_1    ... JISX0213_1フォント
      o JISX0213_2000_2    ... JISX0213_2フォント
      o KSX1001_1997       ... KSC5601_1987フォント(KSC5601_1987も可)
      o UHC                ... UHCフォント(使用されません。UHCの表示にはKSX1001が使われます)
      o JOHAB              ... JOHABフォント(使用されません。JOHABの表示にはKSX1001が使われます)
      o GB2312_80          ... GB2312_80フォント
      o GBK                ... GBKフォント
      o BIG5               ... BIG5フォント
      o HKSCS              ... HKSCSフォント
      o CNS11643_1992_N    ... CNS11643_1992_Nフォント
      o ISO10646_UCS2_1    ... UNICODEフォント(1カラム用)
      o ISO10646_UCS2_1_BIWIDTH ... UNICODEフォント(2カラム用)

        それぞれのボールド体のフォントを指定したい場合には、
        ISO8859_1_BOLD
        のように、"_BOLD"をつけた名前で指定して下さい。

        フォーマットは、以下のようになります。
        
        [default font name];[font size],[font name];[font size],[font name];...

        [default font name] で、デフォルトのフォントを指定し、サイズごとにデフォル
        トと異なるフォントを指定できます。
        [default font name] に %d を含めておくと、そこにフォントサイズが入ります。

        例えば、
        
        ISO8859_1 = -kochi-mincho-medium-*-%d-*-iso8859-1;10,a10;

        このように指定すると、10 point を除くすべてのサイズで東風フォントを使用し、
        10 point については、a10 フォントを使用することができます。

        [font name] , [default font name] は、font , vfont(通常のXフォント)と、
        aafont , vaafont(Xft用フォント) で異なります。
        
        o font/vfont/tfont
          [XLFD(*)](:[percentage])

          (*) もしくは、fonts.aliasで定義している省略記法。
          
        o aafont/vaafont/taafont
          [font family]-[font encoding](:[percentage])

          percentage は、そのフォントのグリフを表示するに、フォントサイズの何パー
          セント分の幅をとるかを指定します。
          例えば、フォントサイズが 12 の場合に、percentage として 100 を指定すると、
          半角文字なら幅 6 , 全角文字なら幅 12 がとられます。
          
          percentage 指定がない場合、通常の X フォントについては、そのフォントの最
          大幅が、Xft フォントについては、'W'が収まるだけの幅がとられます。

          percentage は、微妙に大きさの異なるフォントを組み合わせる場合の微調整や、
          フォントの最大幅、'W' の幅が大きすぎるようなプロポーショナルフォントを使用
          する場合などに使います。
          
          とくに、Dynalab フォントのように、'W' が全角幅で収められているフォントを
          使用する場合は、必ず適切な指定を行なってください。

          e.g.)
          JISX0208_1983 = Hoge-iso10646-1:100;

          但し、表示の際に基準となるフォント(US-ASCII相当のグリフを表示するフォント)
          以外のフォントの percentage 指定は無視され、できるだけ基準フォントに合う
          ような表示が優先されます。

          また、縦用フォントは、デフォルトで、すべて全角幅となりますので、

          ISO8859_1 = 10,a10:100;

          のようにすると、a10 フォントを無理矢理横幅 10 point で表示します。

          percentage 指定の結果、プロポーショナルフォントを固定幅で表示する場合と
          同じ扱いになる場合があります。
          その際は、描画速度が低下しますので注意してください。
          
        vfont または、vaafont , taafont に、条件にあうフォントが見つからない場合、
        それぞれ font , aafont が参照されます。

        フォントが指定されていない文字については、mltermが適当に判断して表示しま
        す。ただし、TCVN5712フォントについては、自動検索しませんので、font/aafont
        にて指定するようにしてください。
        
        ボールド体が指定されていない場合は、mediumフォントとして指定れたフォント、
        もしくは、mltermが適当に見つけ出したmediumフォントを重ね打ちして、それっ
        ぽくみせます。
        ボールド体フォントとして、mediumフォントを指定してやれば、重ねうちはしま
        せん。
        また、アンチエイリアスフォントについては、いずれにせよ、重ねうちはしませ
        ん。
        
        GB18030 については、
        1-byte char : US_ASCII
        2-byte char : GBK
        4-byte char : Unicode
        フォントを使用します。

        CP932 の外字(NEC特殊文字、NEC選定IBM拡張文字、IBM拡張文字)については、
        Unicode に変換して、Unicode フォントを使用します。
        この場合、記号文字など半角全角のあいまいな文字については、-ac 2 オプ
        ションをつけて mlterm を起動し、かつ、ISO10646_UCS2_1 or ISO10646_UCS4_1
        に、記号文字が全角になっている Unicode フォントを指定すると綺麗に表示さ
        れると思います。

        X Input Method のフォントは、なるべく端末画面で使用されているそれと同じ
        ものが使用されます。
        アンチエイリアス中は、font , vfont から適当なフォントを探します。
        ただし、縦用フォントについては、tfont , taafont ではなく、font で指定し
        たフォントが使用されます。

    o color
      各色のRGBを具体的に指定することができます。
      フォーマットは以下のとおり。

      color_name = [red]-[green]-[blue]

      e.g.)
      priv_fg=ffff-ffff-0;
      priv_bg=0-0-ffff;

    o xim
      mlterm では、複数の XIM の動的切替えをサポートしています。
      ここでは、そのために、各 XIM ごとのローケールを指定します。
      ここでの設定は、設定画面に即座に反映されます。

      たとえば、

      kinput2 = ja_JP.eucJP
      Ami = ko_KR.eucKR

      このように指定することで、mlterm 自体が、zh_TW.Big5 ローケールで動いている
      場合でも、Ami を ko_KR.eucKR で、kinput2 を ja_JP.eucJP ローケールで動かす
      ことができるようになります。(つまり、それぞれの言語で入力できるようになる)

    o key
      ショートカットキーの定義

      FUNCTION=KEY_BINDING

      o XIM_OPEN(Shift+space)
        XIMメソッドをOpenします。xim_open_in_startupがtrueに設定されている場合は、
        最初からOpenされていますので、使われません。
      o XIM_CLOSE(UNUSED)
      o NEW_PTY(Ctrl+F1)
        新しいPTYを起動します。
      o PAGE_UP(Shift+Prior)
        ページアップ開始
      o SCROLL_UP(Shift+Up)
        スクロール開始
      o INSERT_SELECTION(Shift+Insert)
        セレクションのペースト

      KEY_BINDINGのフォーマットは以下の通り
      
      (MASK+)KEY
      
      キー割り当てしない場合は UNUSED としてください。
      また、マスク指定も可能です。

      Control
      Shift
      Mod  (Mod1Mask - Mod5Mask まですべてにマッチします)

      の 3 つが使用できます。

      e.g.)
      XIM_OPEN=Control+backslash
      XIM_OPENを、Control+backslashキーに割り当てます。

    o termcap
      termcapデータベースもどき
      
      キーを押下したときに吐き出すシーケンスを指定することができます。
      `\E' , `^A' などが使えます。
      `\' のあとに8進数を指定する記法はサポートしていません。

      o kD
        delete キーを押下したときのシーケンス
        デフォルトでは、`^?'
      o kb
        バックスペースキーを押下したときのシーケンス
        デフォルトでは、`^H'

  o 引数オプション
    -h/--help(=bool)   : ヘルプ
    -v/--version(=bool) : バージョン情報(あまり信用できない:D)
    
    -1/--wscr=value    : 実スクリーンの横幅
    -2/--hscr=value    : 実スクリーンの縦幅
    -5/--big5bug(=bool): XFree86-4.1.0 以前の Big5 CTEXT のバグに対応
    -7/--bel=value     : BEL(0x7) を受け取った時の挙動
    -8/--88591(=bool)  : USASCII の表示に必ず ISO8859-1 フォントを使用
    -A/--aa(=bool)     : アンチ エイリアスフォントの使用
    -B/--sbbg=value    : スクロールバーの背景色
    -C/--iscii=value   : ISCII にて使用する言語
    -D/--bi(=bool)     : BiDi レンダリング
    -E/--km=value      : 文字エンコーディング
    -F/--sbfg=value    : スクロールバーの前景色
    -G/--vertical=value: 縦表示のスタイル
    -H/--bright=value  : 背景画像の輝度
    -I/--icon=value    : アイコン 名
    -K/--maxptys=value : pty window の最大数
    -L/--ls(=bool)     : ログインシェルを使用
    -M/--menu=value     : mlconfig のパス
    -N/--name=value    : アプリケーション名
    -O/--sbmod=value   : スクロールバーのつけ方
    -P/--ptys=value    : 起動時に立ちあげる pty window の数
    -Q/--vcur(=bool)   : 縦用カーソルキーを使用
    -R/--fsrange=value : フォントサイズの範囲
    -S/--sbview=value  : 使いたいスクロールバーの名前
    -T/--title=value   : タイトル名
    -U/--viaucs=value  : 受け取ったXCOMPOUND TEXTを一度UCSに変換
    -V/--varwidth(=bool): 可変長コラム幅を使用
    -W/--sep=value     : 単語の区切り文字
    -X/--openim(=bool) : 起動時に XIM を open
    -Z/--multicol(=bool): 全角文字の処理
    -a/--ac=value      : EastAsianWidth.txt の A プロパティ文字のコラム数
    -b/--bg=value      : 背景色
    -c/--cp932(=bool)  : Xft 使用時に JISX0208 の Unicode 変換で CP932 の変換テーブルを使用
    -d/--display       : DISPLAY を指定
    -f/--fg=value      : 前景色
    -g/--geometry=value : 表示座標位置
    -i/--xim(=bool)    : xim を使用
    -k/--meta(=value)  : Meta キーを押した時の動作
    -l/--sl=value      : ログサイズ
    -m/--comb(=bool)   : 結合文字を使用
    -n/--noucsfont(=bool) : UNICODE フォントを使用しない
    -o/--lsp=value     : 行間の広さ
    -p/--pic=value     : 背景画像のパス
    -r/--fade=value    : Focus を外れたときの Fade 率
    -s/--sb(=bool)     : スクロールバーをつける
    -t/--transbg(=bool) : 背景透過
    -u/--onlyucsfont(=bool) : 常に UNICODE フォントを使用
    -w/--fontsize=value : フォントサイズ
    -x/--tw=value      : タブ幅
    -y/--term=value    : 端末タイプ
    -z/--largesmall=value : larger,smaller ボタンでのフォントサイズの変化量

    -e ... : 指定したコマンドを起動

    o オプションは、以下のフォーマットを受け付けます。
      (-E/--km,-X/--openimを例に)

      -E=euc-jp
      -E euc-jp
      -km=euc-jp
      -km euc-jp
      --km euc-jp
      --km=euc-jp

      -X  (-X=trueと同じ)
      -X=true
      -X=false
      -X true
      -X false
      -openim  (-openim=trueと同じ)
      -openim=true
      -openim=false
      -openim true
      -openim false
      --openim  (-openim=trueと同じ)
      --openim=true
      --openim=false
      --openim true
      --openim false

* 操作方法
  o キーボード
    [通常モード]
    Shift-↑ ... バックスクロールモードへ移行しつつ上スクロール
    Shift-PageUp ... バックスクロールモードへ移行しつつページアップ
    Button2 ... ペースト
    Shift-space  ... xim 初期化
    Shift-insert ... ペースト
    Ctrl+F1 ... 新しいptyウィンドウを起動

    [バックスクロールモード]
    j/↓      ... 下スクロール
    k/↑      ... 上スクロール
    u/PageUP  ... ページアップ
    d/PageDown ... ページダウン
    Shift-space  ... xim 初期化
    Ctrl+F1 ... 新しいptyウィンドウを起動
    それ以外  ... バックスクロールモードから通常モードへの復帰

  o マウス
    ドラッグすれば領域選択できます。
    また、そのまま、スクロールすることもできます。
    
    コンソールアプリケーションがマウスイベントを横取りしている場合は、Shift + Button
    で領域選択できます。
    
    コントロールキー＋右クリック(ボタン3)で、設定画面がでます。

    スクロールバーは、マウスでドラッグすれば、スクロールされます。

* 連絡先
  荒木 賢(Araki Ken)
  j00v0113@ip.media.kyoto-u.ac.jp

* 利用に際しての条件
  BSDライセンスとします。詳細は附属のLICENCEファイルを参照。

* 履歴
  o 2001/05/12
    開発開始
    
  o 2001/05/30
    alpha/beta test こっそり配布開始 (0.x系列 ver 0.1a - 0.6.2)

  o 2001/06/16
    alpha/beta test 配布終了
    pre release ちょっとおおっぴらに配布開始 (1.x系列 ver 0.9.0 - 0.9.6)

  o 2001/06/25
    pre release 配布終了
    正式配布開始 (2.0.x系列 ver 1.9.0 - )

  o 2001/07/31
    1.9.12リリース後、やる気をなくす。

  o 2001/9/15
    1.9.13リリース。またいじりはじめる。

  o 2001/11/29
    2.0.0リリース。sourceforge に移転。
