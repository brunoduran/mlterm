AC_INIT()

PWD=`pwd`
TOPDIR=${PWD}/..
AC_SUBST(TOPDIR)

AC_CONFIG_AUX_DIR(${PWD})

AC_PROG_CC
AC_PROG_INSTALL

AC_ARG_WITH(libtool,
	[ --with-libtool		libtool path[without]],
	libtool=$with_libtool)
if test "${libtool}" != "" ; then
	LIBTOOL=${libtool}
else
	AM_PROG_LIBTOOL
	LIBTOOL=${PWD}/libtool
fi
AC_SUBST(LIBTOOL)

AC_CONFIG_HEADER(../src/kik_config.h) 

AC_CHECK_HEADERS(langinfo.h dlfcn.h dl.h)

AC_CHECK_FUNCS(strsep fgetln basename)

AC_FUNC_ALLOCA

AC_C_INLINE

AC_C_CONST

AC_CHECK_TYPE(u_char,unsigned char)
AC_CHECK_TYPE(u_short,unsigned short)
AC_CHECK_TYPE(u_int,unsigned int)
AC_CHECK_TYPE(u_long,unsigned long)
AC_CHECK_TYPE(u_int8_t,unsigned char)
AC_CHECK_TYPE(u_int16_t,unsigned short)
AC_CHECK_TYPE(u_int32_t,unsigned int)
AC_CHECK_TYPE(u_int64_t,unsigned long)
AC_CHECK_TYPE(int8_t,char)
AC_CHECK_TYPE(int16_t,short)
AC_CHECK_TYPE(int32_t,int)
AC_CHECK_TYPE(int64_t,long)

AC_CACHE_CHECK(for __FUNCTION__ , kik_cv_func_ident,[
AC_TRY_COMPILE(,
[
	char * p = __FUNCTION__ ;
],kik_cv_func_ident=yes,kik_cv_func_ident=no)])
if test "${kik_cv_func_ident}" = "yes" ; then
	AC_DEFINE(HAVE_FUNCTION)
fi

AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_UID_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T

AC_ARG_ENABLE(debug,
	[ --enable-debug	debug[disabled]],
	debug=$enable_debug)
if test "$debug" = "yes" ; then
	DEB_CFLAGS="-DDEBUG -DKIK_DEBUG"
fi
AC_SUBST(DEB_CFLAGS)

AC_OUTPUT(../src/Makefile)
