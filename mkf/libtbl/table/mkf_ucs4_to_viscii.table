/*
 *	mkf_ucs4_to_viscii.table
 */

#ifndef  __MKF_UCS4_TO_VISCII_TABLE__
#define  __MKF_UCS4_TO_VISCII_TABLE__


#include  <stdio.h>			/* NULL */
#include  <kiklib/kik_types.h>		/* u_xxx */


#ifdef  REMOVE_MAPPING_TABLE

#define  CONV_UCS4_TO_VISCII(ch)  0x0

#else

typedef struct ucs4_to_viscii_range
{
	u_int32_t  beg ;
	u_int32_t  end ;

} ucs4_to_viscii_range_t ;

typedef struct ucs4_to_viscii_table
{
	u_int8_t *  table ;
	ucs4_to_viscii_range_t *  range ;

} ucs4_to_viscii_table_t ;

static u_int8_t ucs4_to_viscii_table_0[] =
{
	/* 0xc0 */
	0xc0 ,
	0xc1 ,
	0xc2 ,
	0xc3 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xc8 ,
	0xc9 ,
	0xca ,
	0x00 ,
	0xcc ,
	0xcd ,
	0x00 ,
	0x00 ,

	/* 0xd0 */
	0x00 ,
	0x00 ,
	0xd2 ,
	0xd3 ,
	0xd4 ,
	0xa0 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xd9 ,
	0xda ,
	0x00 ,
	0x00 ,
	0xdd ,
	0x00 ,
	0x00 ,

	/* 0xe0 */
	0xe0 ,
	0xe1 ,
	0xe2 ,
	0xe3 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xe8 ,
	0xe9 ,
	0xea ,
	0x00 ,
	0xec ,
	0xed ,
	0x00 ,
	0x00 ,

	/* 0xf0 */
	0x00 ,
	0x00 ,
	0xf2 ,
	0xf3 ,
	0xf4 ,
	0xf5 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xf9 ,
	0xfa ,
	0x00 ,
	0x00 ,
	0xfd ,
} ;

static ucs4_to_viscii_range_t ucs4_to_viscii_range_0 =
{
	0xc0 , 0xfd
} ;

static u_int8_t ucs4_to_viscii_table_1[] =
{
	/* 0x102 */
	0xc5 ,
	0xe5 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xd0 ,
	0xf0 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x120 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xce ,
	0xee ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x130 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x140 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x150 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x160 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x9d ,
	0xfb ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x170 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x180 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,

	/* 0x190 */
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xb4 ,
	0xbd ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0x00 ,
	0xbf ,
	0xdf ,
} ;

static ucs4_to_viscii_range_t ucs4_to_viscii_range_1 =
{
	0x102 , 0x1b0
} ;

static u_int8_t ucs4_to_viscii_table_1e[] =
{
	/* 0x1ea0 */
	0x80 ,
	0xd5 ,
	0xc4 ,
	0xe4 ,
	0x84 ,
	0xa4 ,
	0x85 ,
	0xa5 ,
	0x86 ,
	0xa6 ,
	0x06 ,
	0xe7 ,
	0x87 ,
	0xa7 ,
	0x81 ,
	0xa1 ,

	/* 0x1eb0 */
	0x82 ,
	0xa2 ,
	0x02 ,
	0xc6 ,
	0x05 ,
	0xc7 ,
	0x83 ,
	0xa3 ,
	0x89 ,
	0xa9 ,
	0xcb ,
	0xeb ,
	0x88 ,
	0xa8 ,
	0x8a ,
	0xaa ,

	/* 0x1ec0 */
	0x8b ,
	0xab ,
	0x8c ,
	0xac ,
	0x8d ,
	0xad ,
	0x8e ,
	0xae ,
	0x9b ,
	0xef ,
	0x98 ,
	0xb8 ,
	0x9a ,
	0xf7 ,
	0x99 ,
	0xf6 ,

	/* 0x1ed0 */
	0x8f ,
	0xaf ,
	0x90 ,
	0xb0 ,
	0x91 ,
	0xb1 ,
	0x92 ,
	0xb2 ,
	0x93 ,
	0xb5 ,
	0x95 ,
	0xbe ,
	0x96 ,
	0xb6 ,
	0x97 ,
	0xb7 ,

	/* 0x1ee0 */
	0xb3 ,
	0xde ,
	0x94 ,
	0xfe ,
	0x9e ,
	0xf8 ,
	0x9c ,
	0xfc ,
	0xba ,
	0xd1 ,
	0xbb ,
	0xd7 ,
	0xbc ,
	0xd8 ,
	0xff ,
	0xe6 ,

	/* 0x1ef0 */
	0xb9 ,
	0xf1 ,
	0x9f ,
	0xcf ,
	0x1e ,
	0xdc ,
	0x14 ,
	0xd6 ,
	0x19 ,
	0xdb ,
} ;

static ucs4_to_viscii_range_t ucs4_to_viscii_range_1e =
{
	0x1ea0 , 0x1ef9
} ;

static u_int32_t  ucs4_to_viscii_beg = 0xc0 ;

static u_int32_t  ucs4_to_viscii_end = 0x1ef9 ;

static ucs4_to_viscii_table_t ucs4_to_viscii_tables[] =
{
	{ ucs4_to_viscii_table_0 , &ucs4_to_viscii_range_0 } ,
	{ ucs4_to_viscii_table_1 , &ucs4_to_viscii_range_1 } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ NULL , NULL , } ,
	{ ucs4_to_viscii_table_1e , &ucs4_to_viscii_range_1e } ,
} ;

/* 'i' is UCS4(32bit) */
#define  HI(i)  ( ((i)>>8) & 0xffffff )
#define  LO(i)  ( (i) & 0xff )

inline u_int8_t
CONV_UCS4_TO_VISCII(
	u_int32_t  ch
	)
{
	u_int32_t  hi_ch ;
	u_int32_t  hi_beg ;
	u_int8_t *  table ;
	ucs4_to_viscii_range_t *  range ;

	if( ch < ucs4_to_viscii_beg || ucs4_to_viscii_end < ch)
	{
		return  0 ;
	}
	
	hi_ch = HI(ch) ;
	hi_beg = HI(ucs4_to_viscii_beg) ;
	
	if( ! ( table = ucs4_to_viscii_tables[ hi_ch - hi_beg].table))
	{
		return  0 ;
	}

	range = ucs4_to_viscii_tables[ hi_ch - hi_beg].range ;
	
	if( ch < range->beg || range->end < ch)
	{
		return  0 ;
	}

	return  table[ LO(ch) - LO(range->beg)] ;
}

#undef  HI
#undef  LO

#endif	/* REMOVE_MAPPING_TABLE */


#endif
